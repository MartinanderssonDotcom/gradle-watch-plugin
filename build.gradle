defaultTasks 'clean', 'build'

apply plugin: 'groovy'
apply plugin: 'maven'
apply plugin: 'eclipse'

apply plugin: 'checkstyle'
apply plugin: 'codenarc'

ext {
    env = System.env
}

repositories {
    mavenCentral()
}

dependencies {
    compile     gradleApi()
    compile     localGroovy()
    testCompile ('org.spockframework:spock-core:0.7-groovy-1.8') { exclude module: 'groovy-all' }
}


// -----------------------------------------------------------------------------
task sourcesJar(type: Jar) {
    from sourceSets.main.allSource
    classifier = 'sources'
}

task release(dependsOn: uploadArchives) << {
    exec { commandLine 'git', 'tag', "v${version}", '-m', "'Release version ${version}'" }
    println "Created a new tag 'v${version}'"

    if (env.REPOSITORY) {
        exec { commandLine 'git', 'push', '--tags', '-q', env.REPOSITORY }
    }
}


// -----------------------------------------------------------------------------
artifacts {
    archives sourcesJar
}

test {
    maxParallelForks = 3
}

codenarc {
    sourceSets = [ sourceSets.main ]
}

eclipse.classpath.file.whenMerged { classpath ->
    classpath.entries.findAll { e -> e.kind == 'src' }*.excludes = [ '**/.DS_Store' ]
}

uploadArchives {

    repositories {
        mavenDeployer {
            repository(url: uri("${mavenRepository}/releases"))

            pom {
                project {
                    name        project.description
                    description project.description
                    url         'https://github.com/bluepapa32/gradle-watch-plugin'
                    scm {
                        url                 'git@github.com:bluepapa32/gradle-watch-plugin.git'
                        connection          'scm:git:git@github.com:bluepapa32/gradle-watch-plugin.git'
                        developerConnection 'scm:git:git@github.com:bluepapa32/gradle-watch-plugin.git'
                    }
                    licenses {
                        license {
                            name         'The Apache Software License, Version 2.0'
                            url          'http://www.apache.org/licenses/LICENSE-2.0.txt'
                            distribution 'repo'
                        }
                    }
                    developers {
                        developer {
                            id 'bluepapa32'
                        }
                    }
                }
            }
        }
    }

    if (env.MAVEN_REPOSITORY) {

        doFirst {
            exec { commandLine 'git', 'clone', '-q', env.MAVEN_REPOSITORY, mavenRepository }
        }

        doLast {
            exec {
                workingDir  mavenRepository
                commandLine 'git', 'add', '--all'
            }
            exec {
                workingDir  mavenRepository
                commandLine 'git', 'commit', '-m', "Release ${project.name} ${project.version}"
            }
            exec {
                workingDir  mavenRepository
                commandLine 'git', 'push', '--all', '-q', env.MAVEN_REPOSITORY
            }
        }
    }
}

